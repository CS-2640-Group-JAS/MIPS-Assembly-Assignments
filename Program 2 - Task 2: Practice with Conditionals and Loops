# Anastasia Davis, Srivalli Kakumani, Jessica Pinto 
# CS2640.01 
# October 30, 2023
# Program 2: Practice with Conditionals and Loops 

.data 
exampleMessage: .asciiz "This program asks the user to input a value for 'x' and 'y'.\nThen, it finds the value of x to the power of y.\nFor example, 2 to the power 3 is 8.\n\n"
prompt1: .asciiz "Please enter an integer for 'x': " 
prompt2: .asciiz "Please enter an integer for 'y': "
result: .asciiz "\nThe result of 'x' to the power of 'y' is: "
errorMessage: .asciiz "\nSorry, this program cannot handle negative exponents. Please try again.\n"

.text 
main: 
	# Display the example usage prompt.
	li $v0, 4 
	la $a0, exampleMessage
	syscall 
	
	# Get the first integer from the user.
	la $a0, prompt1 
	syscall 
	
	# Store the first integer from the user. 
	li $v0, 5 
	syscall 
	move $s0, $v0 
	
	# Get the second integer from the user. 
	li $v0, 4 
	la $a0, prompt2 
	syscall
	
	# Store the second integer from the user. 
	li $v0, 5 
	syscall 
	move $s1, $v0 

	move $s2, $s0
	move $t0, $s0 
	
	# Evaluate the user's input to determine how to calculate the answer.
	beq $s1, 0, pow0
	bgt $s1, 0, power
	j error
power: 
	# Loop and multiply the number until the correct exponent is reached, then print the result.
	beq $s1, 1, printResult
	mul $t0, $t0, $s2
	subi $s1, $s1, 1
	j power
pow0: 
	# If the given exponent is 0, manually set the result to 1.
	li $t0, 1
	 
	 j printResult
error:
	# Displays an error message if the user enters a negative value.
	li $v0, 4
	la $a0, errorMessage
	syscall
	
	j main
printResult: 
	# Display the result message.
	li $v0, 4 
	la $a0, result
	syscall 
	
	# Display the result of the calculation.
	li $v0, 1
	la $a0, ($t0)
	syscall
	
	j exit
exit: 
	# Exit the program.
	li $v0, 10 
	syscall 
